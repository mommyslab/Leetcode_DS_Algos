class Solution {
public:
    int deleteAndEarn(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        if(nums.size()==1)
            return nums[0];
        int m=0;
        for(int i=0;i<nums.size();i++)
        {
            m=max(m,nums[i]);
        }
        vector<int> dp (m+1);
        for(int i=0;i<nums.size();i++)
        {
            int j=nums[i];
            cout<<j<<endl;
            dp[j]+=nums[i];
           // cout<<dp[i]<<i<<"dp[i]"<<endl;
        }
        int skip=0;
        int take=dp[0];
        
        for(int i=1;i<dp.size();i++)
        {
            int t=skip;
            
            skip=max(skip,take);
            cout<<skip<<endl;
            
            take=t+dp[i]; 
            cout<<take<<endl;
        }
        return max(skip,take);
        }
};
