/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        TreeNode * n= new TreeNode();
            n->val=val;
            n->left=nullptr;
            n->right=nullptr;
        TreeNode* current=nullptr;
       
        if(root==nullptr)
        {
             root=n;
            return root;
        }
        
        TreeNode* t=root;
        while(t!=nullptr)
        
        {   current=t;
            if(val<=t->val )
                t=t->left;
            else if(val>t->val )
                t=t->right;
        }
        
        if(val<=current->val)
            current->left=n;
        else
            current->right=n;
                
            
        return root;
        }
};
