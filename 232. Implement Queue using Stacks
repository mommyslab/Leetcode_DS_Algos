class MyQueue {
public:
    /** Initialize your data structure here. */
    stack <int> insert;
    stack<int> extract;
    MyQueue() {
        
    }
    
    /** Push element x to the back of queue. */
    void push(int x) {
        insert.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    int pop() {
       int res= peek();
        insert.pop();
        return res;
    }
    
    /** Get the front element. */
    int peek() {
        if(extract.empty())
        {
            while(!insert.empty())
            { extract.push(insert.top());
                insert.pop();}
        }
        int res=extract.top();
        return res;
    }
    
    /** Returns whether the queue is empty. */
    bool empty() {
        if(extract.empty() && insert.empty())
            return true;
        else
            return false; 
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
